{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","Input","_ref","invalid","shouldValidate","touched","elementType","elementConfig","value","changed","label","inputElement","inputClasses","classes","InputElement","push","Invalid","a","createElement","Object","assign","className","join","onChange","options","map","option","key","displayValue","Label","module","exports","Auth","initControls","name","type","placeholder","validation","required","isEmail","valid","password","minLength","connect","state","loading","auth","error","isAuth","token","buildingBurger","burgerBuilder","building","authRedirectPath","dispatch","onAuth","email","isSignUp","actions","onSetAuthRedirectPath","_useState","useState","_useState2","D_IT_Projekty_burger_builder_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","controls","setControls","_useState3","_useState4","setIsSignUp","formElementsArray","id","config","form","formElement","react__WEBPACK_IMPORTED_MODULE_2___default","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_4__","event","controlName","preventDefault","updatedControls","updateObject","D_IT_Projekty_burger_builder_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","inputChangeHandler","useEffect","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_6__","Fragment","onSubmit","e","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_5__","btnType","role","replaceAll","toLowerCase","clicked","prevVal"],"mappings":"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","file":"static/js/4.b806549a.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst Input = ({\n  invalid,\n  shouldValidate,\n  touched,\n  elementType,\n  elementConfig,\n  value,\n  changed,\n  label,\n}) => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (invalid && shouldValidate && touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...elementConfig}\n          value={value}\n          onChange={changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={classes.InputElement}\n          {...elementConfig}\n          value={value}\n          onChange={changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={classes.InputElement}\n          value={value}\n          onChange={changed}\n        >\n          {elementConfig.options.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={classes.InputElement}\n          {...elementConfig}\n          value={value}\n        />\n      );\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2834t\",\"Label\":\"Input_Label__-XXEl\",\"InputElement\":\"Input_InputElement__3dOoi\",\"Invalid\":\"Input_Invalid__1rViZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1yb_r\"};","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport classes from \"./Auth.module.css\";\nimport * as actions from \"../../store/actions\";\nimport { checkValidity, updateObject } from \"../../shared/utility\";\nimport { Redirect } from \"react-router-dom\";\n\nconst initControls = {\n  name: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"email\",\n      placeholder: \"Mail address\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n      isEmail: true,\n    },\n    valid: false,\n    touched: false,\n  },\n  password: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"password\",\n      placeholder: \"Password\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n      minLength: 6,\n    },\n    valid: false,\n    touched: false,\n  },\n};\n\nconst Auth = ({\n  onAuth,\n  onSetAuthRedirectPath,\n  loading,\n  error,\n  isAuth,\n  buildingBurger,\n  authRedirectPath,\n}) => {\n  const [controls, setControls] = useState(initControls);\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const inputChangeHandler = (event, controlName) => {\n    event.preventDefault();\n\n    const updatedControls = updateObject(controls, {\n      [controlName]: updateObject(controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          controls[controlName].validation\n        ),\n        touched: true,\n      }),\n    });\n\n    setControls(updatedControls);\n  };\n\n  const formElementsArray = [];\n  for (let key in controls) {\n    formElementsArray.push({\n      id: key,\n      config: controls[key],\n    });\n  }\n\n  const form = formElementsArray.map((formElement) => (\n    <Input\n      key={formElement.id}\n      elementType={formElement.config.elementType}\n      elementConfig={formElement.config.elementConfig}\n      value={formElement.config.value}\n      invalid={!formElement.config.valid}\n      shouldValidate={formElement.config.validation}\n      touched={formElement.config.touched}\n      changed={(event) => inputChangeHandler(event, formElement.id)}\n    />\n  ));\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    onAuth(controls.name.value, controls.password.value, isSignUp);\n  };\n\n  const onSignBtnHandler = () => {\n    setIsSignUp((prevVal) => !prevVal);\n  };\n\n  useEffect(() => {\n    if (!buildingBurger && authRedirectPath !== \"/\") {\n      onSetAuthRedirectPath();\n    }\n  }, []);\n\n  if (isAuth) {\n    return <Redirect to={authRedirectPath} />;\n  }\n\n  return (\n    <div className={classes.Auth}>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <form onSubmit={submitHandler}>\n            {form}\n            <Button btnType=\"Success\">Submit</Button>\n          </form>\n          {error && (\n            <p role=\"alert\">{error.replaceAll(\"_\", \" \").toLowerCase()}</p>\n          )}\n        </>\n      )}\n      <Button btnType=\"Danger\" clicked={onSignBtnHandler}>\n        SWITCH TO {isSignUp ? \"SIGN IN\" : \"SIGN UP\"}\n      </Button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (email, password, isSignUp) =>\n      dispatch(actions.auth(email, password, isSignUp)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\")),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuth: state.auth.token !== null,\n    buildingBurger: state.burgerBuilder.building,\n    authRedirectPath: state.auth.authRedirectPath,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n"],"sourceRoot":""}