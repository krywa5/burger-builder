{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","_ref","ingredients","price","ingredientsArr","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","toFixed","connect","state","orders","order","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","components_Order_Order","id","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,6HCuCHA,EArCD,SAAAC,GAA4B,IAAzBC,EAAyBD,EAAzBC,YAAaC,EAAYF,EAAZE,MACtBC,EAAiB,GAEvB,IAAK,IAAIC,KAAkBH,EACzBE,EAAeE,KAAK,CAClBC,KAAMF,EACNG,OAAQN,EAAYG,KAIxB,IAAMI,EAAmBL,EAAeM,IAAI,SAACC,GAC3C,OACEC,EAAAC,EAAAC,cAAA,QACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKV,EAAGJ,MAEPI,EAAGJ,KAVN,KAUcI,EAAGH,OAVjB,OAeJ,OACEI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQvB,OACtBY,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAA,qBAAaU,OAAOC,WAAWtB,GAAOuB,QAAQ,sBCY9CC,sBAhBS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,MAAMD,OACpBE,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKC,SAII,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OACbC,EAASE,IAAoBL,EAAOE,OAI3BP,CAGbW,YAzCa,SAAArC,GAAuD,IAApDmC,EAAoDnC,EAApDmC,cAAeP,EAAqC5B,EAArC4B,OAAQE,EAA6B9B,EAA7B8B,QAASC,EAAoB/B,EAApB+B,MAAOE,EAAajC,EAAbiC,OAKvD,OAJAK,oBAAU,WACRH,EAAcJ,EAAOE,IACpB,IAGDtB,EAAAC,EAAAC,cAAA,WACGiB,EACCnB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,MAEAX,EAAOnB,IAAI,SAACoB,GAAD,OACTlB,EAAAC,EAAAC,cAAC2B,EAAD,CACEpB,IAAKS,EAAMY,GACXxC,YAAa4B,EAAM5B,YACnBC,MAAO2B,EAAM3B,YA2BEwC","file":"static/js/5.16315059.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1WGDM\"};","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst Order = ({ ingredients, price }) => {\n  const ingredientsArr = [];\n\n  for (let ingredientName in ingredients) {\n    ingredientsArr.push({\n      name: ingredientName,\n      amount: ingredients[ingredientName],\n    });\n  }\n\n  const ingredientOutput = ingredientsArr.map((ig) => {\n    return (\n      <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\",\n        }}\n        key={ig.name}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>USD {Number.parseFloat(price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default Order;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Order from \"../../components/Order/Order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../store/actions\";\n\nconst Orders = ({ onFetchOrders, orders, loading, token, userId }) => {\n  useEffect(() => {\n    onFetchOrders(token, userId);\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <Spinner />\n      ) : (\n        orders.map((order) => (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProsp = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(actions.fetchOrders(token, userId)),\n  };\n};\n\nexport default connect(\n  mapStateToProsp,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}