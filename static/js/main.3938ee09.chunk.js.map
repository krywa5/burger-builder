{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/Order.module.css","hoc/Auxillary/Auxillary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Input","Label","InputElement","Invalid","SideDrawer","Open","Close","Logo","BuildControl","Less","More","Toolbar","DesktopOnly","ContactData","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","NavigationItems","DrawerToggle","Backdrop","Burger","Modal","Loader","load8","CheckoutSummary","Order","aux","props","children","logo","react_default","a","createElement","className","classes","style","height","src","burgerLogo","alt","navigationItem","NavLink","to","link","exact","activeClassName","navigationItems","drawerToggle","onClick","clicked","toolbar","drawerToggleClicked","backdrop","show","sideDrawer","attachedClasses","open","Auxillary","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","this","Component","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","nextProps","nextState","modalClosed","transform","opacity","button","btnType","OrderSummary","ingredientSummary","textTransform","priceTotal","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","requestInterceptor","interceptors","request","use","responseInterceptor","response","eject","UI_Modal_Modal","message","INGREDIENTS_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","objectSpread","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","sum","disabledInfo","orderSummary","Spinner","purchaseHandler","bind","Burger_OrderSummary_OrderSummary","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","orderData","post","inputChangedHandler","e","inputId","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","param","err","return","Route","path","match","render","Checkout_ContactData_ContactData","ingredientName","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","orders","fetchedOrders","App","hoc_Layout_Layout","Switch","component","Orders","BurgerBuilder","Boolean","window","hostname","app","BrowserRouter","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3938ee09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2HgXv\",\"BreadTop\":\"BurgerIngredient_BreadTop___8pWp\",\"Seeds1\":\"BurgerIngredient_Seeds1__3OCvM\",\"Seeds2\":\"BurgerIngredient_Seeds2__2mF6Q\",\"Meat\":\"BurgerIngredient_Meat__59Ev0\",\"Cheese\":\"BurgerIngredient_Cheese__3dSTl\",\"Salad\":\"BurgerIngredient_Salad__MUWpe\",\"Bacon\":\"BurgerIngredient_Bacon__2LIjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1U555\",\"Label\":\"Input_Label__3EdNE\",\"InputElement\":\"Input_InputElement__xiMn0\",\"Invalid\":\"Input_Invalid__1LxyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2ruwE\",\"Open\":\"SideDrawer_Open__2E1aV\",\"Close\":\"SideDrawer_Close__o2cwV\",\"Logo\":\"SideDrawer_Logo__2d6l_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2_e3_\",\"Label\":\"BuildControl_Label__ny-hQ\",\"Less\":\"BuildControl_Less__23Mfv\",\"More\":\"BuildControl_More__1PWO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2uAaX\",\"Logo\":\"Toolbar_Logo__oBD3Q\",\"DesktopOnly\":\"Toolbar_DesktopOnly__HoXc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__31lPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2-R4t\",\"active\":\"NavigationItem_active__1XTWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__LV2F4\",\"OrderButton\":\"BuildControls_OrderButton__3Ug_L\",\"enable\":\"BuildControls_enable__3781w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__peX4q\",\"Success\":\"Button_Success__2g9g_\",\"Danger\":\"Button_Danger__1p-tJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__NAGMf\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__s-da0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__35OC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__16wy0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1DHp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1ZF9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__Xaeey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__wjPoh\",\"load8\":\"Spinner_load8__1XFR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2wXSv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3_u8p\"};","const aux = (props) => {\r\n    return (props.children);\r\n}\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={classes.Logo} style={{ height: props.height }}>\r\n            <img src={burgerLogo} alt=\"MyBurger\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink\r\n                to={props.link}\r\n                exact\r\n                activeClassName={classes.active}>{props.children}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css'\r\n\r\nconst navigationItems = (props) => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem link='/'>\r\n                Burger Builder\r\n            </NavigationItem>\r\n            <NavigationItem link='/orders'>\r\n                Orders\r\n            </NavigationItem>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css'\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n            <span></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked} />\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems />\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n    );\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxillary/Auxillary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport Aux from '../Auxillary/Auxillary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: false\r\n        })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                showSideDrawer: !prevState.showSideDrawer\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer closed={this.sideDrawerClosedHandler} open={this.state.showSideDrawer} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    //Object.keys() z obiektu tworzy tablicę składającą się TYLKO z kluczy obiektu\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n        // _ jako argument oznacza, że ten argument nas nie obchodzi\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        });\r\n    }).reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n\r\n    // console.log(transformedIngredients);\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type='bread-top' />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => {\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button\r\n                className={classes.Less}\r\n                onClick={props.removed}\r\n                disabled={props.disabled}>Less</button>\r\n            <button\r\n                className={classes.More}\r\n                onClick={props.added}>More</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n]\r\n\r\nconst buildControls = (props) => {\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    added={() => props.ingredientAdded(ctrl.type)}\r\n                    removed={() => props.ingredientRemoved(ctrl.type)}\r\n                    disabled={props.disabled[ctrl.type]}\r\n                />\r\n            ))}\r\n            <button\r\n                className={classes.OrderButton}\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}>ORDER NOW</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxillary/Auxillary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    // This could be functional component, doesn't have to be class compoennt\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\r\n    }\r\n\r\n    // Sprawdzenie kiedy komponent się renderuje\r\n    // componentWillUpdate() {\r\n    //     console.log('[Modal] componentWillUpdate');\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    return (\r\n        <button\r\n            disabled={props.disabled}\r\n            // sposób na dynamiczne zmienianie nazwy klasy przycisku\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}\r\n            onClick={props.clicked}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxillary/Auxillary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    // componentWillUpdate() {\r\n    //     console.log('[OrderSummary] will update')\r\n    // }\r\n\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\r\n            return (\r\n                <li key={igKey}>\r\n                    <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <Aux>\r\n                <h3>Your order</h3>\r\n                <p>A delicious burger with following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.priceTotal.toFixed(2) + '$'}</strong></p>\r\n                <p>Continue to checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderSummary;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-app-da7f2.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = (props) => {\r\n    return (\r\n        <div className={classes.Loader}>Loading...</div>\r\n    );\r\n}\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxillary/Auxillary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        };\r\n\r\n        componentWillMount() {\r\n            this.requestInterceptor = axios.interceptors.request.use(request => {\r\n                this.setState({\r\n                    error: null\r\n                })\r\n                return request;\r\n            })\r\n            this.responseInterceptor = axios.interceptors.response.use(response => response, error => {\r\n                this.setState({\r\n                    error\r\n                });\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            // console.log('will unmount', this.requestInterceptor, this.responseInterceptor);\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({\r\n                error: null\r\n            })\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withErrorHandler","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n// stałe które chcemy wykorzystać jako globalne, możemy pisać z dużych liter\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 5,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://react-burger-app-da7f2.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                this.setState({\r\n                    ingredients: response.data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    error: true\r\n                })\r\n            });\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        //sposób na dostanie się do konkretnego klucza\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        // Tworzenie kopii state\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENTS_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENTS_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients\r\n        });\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        //tworzenie tablicy składającej się tylko z wartości z obiektu ingredients\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey]\r\n        }).reduce((sum, el) => {\r\n            return sum + el\r\n        }, 0);\r\n        this.setState({\r\n            purchasable: sum > 0\r\n        })\r\n    }\r\n\r\n    purchaseHandler() {\r\n        this.setState({\r\n            purchasing: true\r\n        })\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({\r\n            purchasing: false\r\n        })\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // PRZEKAZYWANIE POPRZEZ QUERY PARAMETRY\r\n        const queryParams = [];\r\n        for (let i in this.state.ingredients) {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.state.error ? <p>Ingredients can't be loaded</p> : <Spinner />\r\n\r\n        if (this.state.ingredients) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.state.ingredients} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.addIngredientHandler}\r\n                        ingredientRemoved={this.removeIngredientHandler}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.state.purchasable}\r\n                        price={this.state.totalPrice}\r\n                        ordered={this.purchaseHandler.bind(this)}\r\n                    />\r\n                </Aux>\r\n            );\r\n            orderSummary = (<OrderSummary\r\n                ingredients={this.state.ingredients}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                priceTotal={this.state.totalPrice}\r\n            />)\r\n        }\r\n\r\n        if (this.state.loading) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button\r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button\r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (<select\r\n                className={classes.InputElement}\r\n                value={props.value}\r\n                onChange={props.changed}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                ))}\r\n            </select>);\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 4,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' }\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                valid: true,\r\n                validation: {}\r\n            }\r\n        },\r\n        formIsValid: false,\r\n        loading: false,\r\n    };\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const formData = {};\r\n        for (let formElementId in this.state.orderForm) {\r\n            formData[formElementId] = this.state.orderForm[formElementId].value\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            });\r\n    }\r\n\r\n    inputChangedHandler = (e, inputId) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        // Trzeba skopiować także obiekty, które znajdują się w obiekcie this.state.orderForm. Inaczej byłaby tylko referencja do tych obiektów. Należy zatem pamiętać, że kopiowanie elementów za pomocą operatora ... działa tylko na 1 rząd\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputId]\r\n        };\r\n        updatedFormElement.value = e.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputId] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let inputId in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputId].valid && formIsValid;\r\n        }\r\n        this.setState({\r\n            orderForm: updatedOrderForm,\r\n            formIsValid\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        };\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                        touched={formElement.config.touched}\r\n                    />\r\n                ))}\r\n                <Button btnType='Success' disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.state.loading) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n// import buildControl from '../../components/Burger/BuildControls/BuildControl/BuildControl';\r\n\r\nclass Checkout extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        price: null\r\n    }\r\n\r\n    componentWillMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price = null;\r\n        for (let param of query.entries()) {\r\n            // ['salad', '1']\r\n            if (param[0] === 'price') {\r\n                price = param[1]\r\n            } else {\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n        }\r\n        this.setState({\r\n            ingredients,\r\n            price\r\n        })\r\n    }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        // cofa do poprzedniego URL\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        // przekieruje do konkretnego URL\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CheckoutSummary\r\n                    ingredients={this.state.ingredients}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler} />\r\n                <Route\r\n                    path={this.props.match.path + '/contact-data'}\r\n                    // Żeby przekazać propsy do komponentu, należy zamiast propsu 'component' użyc propsu 'render'\r\n                    render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.price} {...props} />)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span style={{ textTransform: 'capitalize', display: 'inline-block', margin: '0 8px', border: '1px solid #ccc', padding: '5px' }} key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nimport Order from '../../components/Order/Order';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/orders.json')\r\n            .then(response => {\r\n                const fetchedOrders = [];\r\n                for (let key in response.data) {\r\n                    fetchedOrders.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                this.setState({\r\n                    loading: false,\r\n                    orders: fetchedOrders\r\n                });\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.orders.map(order => (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Orders from './containers/Orders/Orders';\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route path='/checkout' component={Checkout} />\r\n                        <Route path='/orders' component={Orders} />\r\n                        <Route path='/' component={BurgerBuilder} />\r\n                    </Switch>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}