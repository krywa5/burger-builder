{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","Input","_ref","invalid","shouldValidate","touched","elementType","elementConfig","value","changed","label","inputElement","inputClasses","classes","InputElement","push","Invalid","a","createElement","Object","assign","className","join","onChange","options","map","option","key","displayValue","Label","module","exports","ContactData","CheckoutSummary","checkoutCancelled","ingredients","checkoutContinued","react_default","style","width","margin","Burger","Button","btnType","clicked","initState","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","connect","state","ings","burgerBuilder","price","totalPrice","loading","order","token","auth","userId","dispatch","onOrderedBurger","orderData","actions","withErrorHandler","_useState","useState","_useState2","slicedToArray","orderForm","setOrderForm","_useState3","_useState4","formIsValid","setFormIsValid","formElementsArray","id","config","form","onSubmit","event","preventDefault","formData","formElementId","formElement","e","inputId","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","defineProperty","inputChangedHandler","disabled","Spinner","axios","purchased","history","match","onInitPurchase","react_router","to","Order_CheckoutSummary_CheckoutSummary","goBack","replace","path","component"],"mappings":"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","file":"static/js/3.c88a36be.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst Input = ({\n  invalid,\n  shouldValidate,\n  touched,\n  elementType,\n  elementConfig,\n  value,\n  changed,\n  label,\n}) => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (invalid && shouldValidate && touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...elementConfig}\n          value={value}\n          onChange={changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={classes.InputElement}\n          {...elementConfig}\n          value={value}\n          onChange={changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={classes.InputElement}\n          value={value}\n          onChange={changed}\n        >\n          {elementConfig.options.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={classes.InputElement}\n          {...elementConfig}\n          value={value}\n        />\n      );\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2834t\",\"Label\":\"Input_Label__-XXEl\",\"InputElement\":\"Input_InputElement__3dOoi\",\"Invalid\":\"Input_Invalid__1rViZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__SYajU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3d7Th\"};","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../UI/Button/Button\";\nimport classes from \"./CheckoutSummary.module.css\";\n\nconst CheckoutSummary = ({\n  checkoutCancelled,\n  ingredients,\n  checkoutContinued,\n}) => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Burger ingredients={ingredients} />\n      </div>\n      <Button btnType=\"Danger\" clicked={checkoutCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={checkoutContinued}>\n        CONTINUE\n      </Button>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React, { useState } from \"react\";\nimport \"./ContactData.module.css\";\nimport axios from \"../../../axios-orders\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport classes from \"./ContactData.module.css\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../../store/actions\";\nimport { checkValidity, updateObject } from \"../../../shared/utility\";\n\nconst initState = {\n  name: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"text\",\n      placeholder: \"Name\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    valid: false,\n    touched: false,\n  },\n  street: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"text\",\n      placeholder: \"Street\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    valid: false,\n    touched: false,\n  },\n  zipCode: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"text\",\n      placeholder: \"ZIP Code\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n      minLength: 4,\n      maxLength: 5,\n    },\n    valid: false,\n    touched: false,\n  },\n  country: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"text\",\n      placeholder: \"Country\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    valid: false,\n    touched: false,\n  },\n  email: {\n    elementType: \"input\",\n    elementConfig: {\n      type: \"email\",\n      placeholder: \"Email\",\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    valid: false,\n    touched: false,\n  },\n  deliveryMethod: {\n    elementType: \"select\",\n    elementConfig: {\n      options: [\n        { value: \"fastest\", displayValue: \"Fastest\" },\n        { value: \"cheapest\", displayValue: \"Cheapest\" },\n      ],\n    },\n    value: \"fastest\",\n    valid: true,\n    validation: {},\n  },\n};\n\nconst ContactData = ({\n  ings,\n  price,\n  onOrderedBurger,\n  token,\n  loading,\n  userId,\n}) => {\n  const [orderForm, setOrderForm] = useState(initState);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const orderHandler = (event) => {\n    event.preventDefault();\n\n    const formData = {};\n    for (let formElementId in orderForm) {\n      formData[formElementId] = orderForm[formElementId].value;\n    }\n    const order = {\n      ingredients: ings,\n      price: price,\n      orderData: formData,\n      userId: userId,\n    };\n\n    onOrderedBurger(order, token);\n  };\n\n  const inputChangedHandler = (e, inputId) => {\n    // Trzeba skopiować także obiekty, które znajdują się w obiekcie orderForm. Inaczej byłaby tylko referencja do tych obiektów. Należy zatem pamiętać, że kopiowanie elementów za pomocą operatora ... działa tylko na elementy proste\n    const updatedFormElement = updateObject(orderForm[inputId], {\n      value: e.target.value,\n      valid: checkValidity(e.target.value, orderForm[inputId].validation),\n      touched: true,\n    });\n    const updatedOrderForm = updateObject(orderForm, {\n      [inputId]: updatedFormElement,\n    });\n\n    let formIsValid = true;\n    for (let inputId in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputId].valid && formIsValid;\n    }\n    setOrderForm(updatedOrderForm);\n    setFormIsValid(formIsValid);\n  };\n\n  const formElementsArray = [];\n  for (let key in orderForm) {\n    formElementsArray.push({\n      id: key,\n      config: orderForm[key],\n    });\n  }\n\n  let form = (\n    <form onSubmit={orderHandler}>\n      {formElementsArray.map((formElement) => (\n        <Input\n          key={formElement.id}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          invalid={!formElement.config.valid}\n          shouldValidate={formElement.config.validation}\n          changed={(event) => inputChangedHandler(event, formElement.id)}\n          touched={formElement.config.touched}\n        />\n      ))}\n      <Button btnType=\"Success\" disabled={!formIsValid}>\n        ORDER\n      </Button>\n    </form>\n  );\n  if (loading) {\n    form = <Spinner />;\n  }\n  return (\n    <div className={classes.ContactData}>\n      <h4>Enter your Contact Data</h4>\n      {form}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onOrderedBurger: (orderData, token) =>\n      dispatch(actions.purchaseBurger(orderData, token)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"./ContactData/ContactData\";\n\nconst Checkout = ({ history, ings, match, onInitPurchase, purchased }) => {\n  const checkoutCancelledHandler = () => {\n    // cofa do poprzedniego URL\n    history.goBack();\n  };\n\n  const checkoutContinuedHandler = () => {\n    // przekieruje do konkretnego URL\n    history.replace(\"/checkout/contact-data\");\n  };\n\n  if (!ings) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (purchased) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <CheckoutSummary\n        ingredients={ings}\n        checkoutCancelled={checkoutCancelledHandler}\n        checkoutContinued={checkoutContinuedHandler}\n      />\n      <Route path={match.path + \"/contact-data\"} component={ContactData} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased,\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n"],"sourceRoot":""}